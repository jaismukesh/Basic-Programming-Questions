#include <iostream>
using namespace std;

class Node{
public:
int data;
Node*next;

   Node(int data){
     this->data=data;
     this->next=NULL;
   }
};

void print(Node* &head){
    Node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}

Node* Reverse(Node* &pre,Node* &curr){
  //base case
  if(curr==NULL){
    return pre;
  }

  //1case solve baaki recursion sambhal lega
  Node*forward=curr->next;
  curr->next=pre;

  Reverse(curr,forward);
}
int main() {
  
  Node*first=new Node(10);
  Node*second =new Node(20);
  Node*third=new Node(30);
  Node*forth=new Node(40);
  Node*fifth=new Node(50); 

  //Node* head=first;
  first->next= second;
  second->next=third;
  third->next=forth;
  forth->next=fifth;
  fifth->next=NULL;
   
   cout<<"printing the element:"<<endl;
   print(first);

  Node*pre=NULL;
  Node*curr=first;
  first= Reverse(pre,curr);
  cout<<endl;
  cout<<"reverse Linked List is: "<<endl;
  print(first);
  cout<<endl;
}
